name: Auto-Merge Dev Changes

on:
  push:
    branches:
      - dev

jobs:
  merge:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensure all branches are fetched

      # Step 2: Set up Git
      - name: Set up Git
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 3: Merge dev into uat
      - name: Merge Dev into UAT
        run: |
          echo "Attempting to merge dev into uat..."
          git checkout uat
          if ! git merge dev --no-ff -m "Auto-merge changes from dev to uat"; then
            echo "Merge failed. Conflicts detected:"
            git --no-pager diff --name-only --diff-filter=U  # List files with conflicts
            exit 1  # Stop the workflow with an error
          fi
          git push origin uat || echo "Push to uat failed. Resolve conflicts manually."

      # Step 4: Merge dev into prod
      - name: Merge Dev into Prod
        run: |
          echo "Attempting to merge dev into prod..."
          git checkout prod
          if ! git merge dev --no-ff -m "Auto-merge changes from dev to prod"; then
            echo "Merge failed. Conflicts detected:"
            git --no-pager diff --name-only --diff-filter=U  # List files with conflicts
            exit 1  # Stop the workflow with an error
          fi
          git push origin prod || echo "Push to prod failed. Resolve conflicts manually."

      # Step 5: Merge dev into main
      - name: Merge Dev into Main
        run: |
          echo "Attempting to merge dev into main..."
          git checkout main
          if ! git merge dev --no-ff -m "Auto-merge changes from dev to main"; then
            echo "Merge failed. Conflicts detected:"
            git --no-pager diff --name-only --diff-filter=U  # List files with conflicts
            exit 1  # Stop the workflow with an error
          fi
          git push origin main || echo "Push to main failed. Resolve conflicts manually."
